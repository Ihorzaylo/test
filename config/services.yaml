# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Test\:
        resource: '../src/Test/*'
        exclude: '../src/Test/{DependencyInjection,Domain/Entity,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Test\Infrastructure\Controller\:
        resource: '../src/Test/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    Test\Infrastructure\Request\Resolver\CustomRequestResolver:
        arguments:
            - '@service_container'
        tags:
            - { name: controller.request_value_resolver }

    notification.repository.message:
        class: Test\Infrastructure\Repository\BalanceRepository
        factory: ["@doctrine.orm.entity_manager", "getRepository"]
        arguments:
            - 'Test\Domain\Entity\Balance'

    Test\Domain\Repository\BalanceRepositoryInterface: '@Test\Infrastructure\Repository\BalanceRepository'
    Test\Infrastructure\Repository\BalanceRepository:
        factory: ['@doctrine.orm.entity_manager', 'getRepository']
        arguments: ['Test\Domain\Entity\Balance']

    Test\Domain\Repository\TransactionRepositoryInterface: '@Test\Infrastructure\Repository\TransactionRepository'
    Test\Infrastructure\Repository\TransactionRepository:
        factory: ['@doctrine.orm.entity_manager', 'getRepository']
        arguments: ['Test\Domain\Entity\Transaction']

    Test\Infrastructure\Response\Listener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    Test\Domain\Lock\LockerInterface:
        class: Test\Infrastructure\Lock\Locker
        arguments:
            $factory: '@Symfony\Component\Lock\LockFactory'
            $serviceName: '%env(resolve:SERVICE_NAME)%'




